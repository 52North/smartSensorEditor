<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2014-2015 52°North Initiative for Geospatial Open Source
    Software GmbH

    This program is free software; you can redistribute it and/or modify it
    under the terms of the GNU General Public License version 2 as published
    by the Free Software Foundation.

    If the program is linked with libraries which are licensed under one of
    the following licenses, the combination of the program with the linked
    library is not considered a "derivative work" of the program:

        - Apache License, version 2.0
        - Apache Software License, version 1.0
        - GNU Lesser General Public License, version 3
        - Mozilla Public License, versions 1.0, 1.1 and 2.0
        - Common Development and Distribution License (CDDL), version 1.0

    Therefore the distribution of the program linked with libraries licensed
    under the aforementioned licenses, is permitted by the copyright holders
    if the distribution is compliant with both the GNU General Public
    License version 2 and the aforementioned licenses.

    This program is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
    Public License for more details.

-->
<schema xmlns="http://purl.oclc.org/dsdl/schematron" xmlns:sml="http://www.opengis.net/sensorml/2.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:swe="http://www.opengis.net/swe/2.0" xmlns:gml="http://www.opengis.net/gml/3.2"
	xmlns:xlink="http://www.w3.org/1999/xlink"
	xsi:schemaLocation="http://www.opengis.net/sensorml/2.0 http://schemas.opengis.net/sensorML/2.0/sensorML.xsd http://www.opengis.net/swe/2.0 http://schemas.opengis.net/sweCommon/2.0/swe.xsd"
	schemaVersion="ISO19757-3">
	<ns prefix="sml" uri="http://www.opengis.net/sensorml/2.0" />
	<ns prefix="gml" uri="http://www.opengis.net/gml/3.2" />
	<ns prefix="swe" uri="http://www.opengis.net/swe/2.0" />
	<ns prefix="xlink" uri="http://www.w3.org/1999/xlink" />


	<!-- Schematron for SensorML: Physical System -->
	<xsl:import href="/validation/core.xslt" />
	<!--<xsl:import href="/validation/physical_component.xslt" /> -->
	<xsl:import href="/validation/physical_system.xslt" />
	<!--<xsl:import href="/validation/simple_process.xslt" /> -->

	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- General Validation -->
	<!-- This pattern validates the parts of the SensorML document which are 
		common for the System and the Component. -->
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<pattern id="GeneralValidation">
		<!--~~~~~~~~~~ -->
		<!--gml:description -->
		<!--~~~~~~~~~~ -->


		<!-- These rules ensure that for every PhysicalSystem a gml:description 
			is provided.. -->
		<rule context="//sml:PhysicalSystem">
			<assert test="gml:description">errors.validation.SML.2.0.discovery.gmlDescription</assert>
		</rule>

		<!-- These rules ensure that for every PhysicalComponent a gml:description 
			is provided.. -->
		<rule context="//sml:PhysicalComponent">
			<assert test="gml:description">errors.validation.SML.2.0.discovery.gmlDescription</assert>
		</rule>


		<!--~~~~~~~~~~ -->
		<!--sml:keywords -->
		<!--~~~~~~~~~~ -->


		<!-- In order to make sure that a list of keywords describing the sensor 
			is provided. -->
		<rule context="//sml:PhysicalSystem">
			<assert test="sml:keywords/sml:KeywordList">errors.validation.SML.2.0.discovery.smlKeywordList</assert>
		</rule>


		<!-- In order to make sure that a list of keywords describing the sensor 
			is provided. -->
		<rule context="//sml:PhysicalComponent">
			<assert test="sml:keywords/sml:KeywordList">errors.validation.SML.2.0.discovery.smlKeywordList</assert>
		</rule>


		<!--~~~~~~~~~~ -->
		<!--Identification -->
		<!--~~~~~~~~~~ -->


		<!-- Each "identifier/Term" element contained in the "IdentifierList" must 
			have a "definition" attribute. This attribute links to the semantics of the 
			identifier. -->
		<rule
			context="//sml:identification/sml:IdentifierList/sml:identifier/sml:Term">
			<assert test="string-length(@definition) > 0">errors.validation.SML.2.0.discovery.smlIdentification.definition</assert>
		</rule>


		<!-- One identifier has to contain the definition "http://www.nexosproject.eu/dictionary/definitions.html#UUID". 
			The value of its contained "Term" element uniquely identifies the instance. -->
		<rule context="//sml:identification">
			<assert
				test="count(sml:IdentifierList/sml:identifier/sml:Term[@definition = 'http://www.nexosproject.eu/dictionary/definitions.html#UUID']) = 1">errors.validation.SML.2.0.discovery.smlIdentification.UUID</assert>
		</rule>


		<!-- One identifier has to contain the definition "http://www.nexosproject.eu/dictionary/definitions.html#longName". 
			The value of its contained "Term" element represents a short representation 
			of the human understandable name for the instance. -->
		<rule context="//sml:identification">
			<assert
				test="count(sml:IdentifierList/sml:identifier/sml:Term[@definition = 'http://www.nexosproject.eu/dictionary/definitions.html#longName']) = 1">errors.validation.SML.2.0.discovery.smlIdentification.longName</assert>
		</rule>


		<!-- One identifier has to contain the definition "http://www.nexosproject.eu/dictionary/definitions.html#shortName". 
			The value of its contained "Term" element represents a human understandable 
			name for the instance. -->
		<rule context="//sml:identification">
			<assert
				test="count(sml:IdentifierList/sml:identifier/sml:Term[@definition = 'http://www.nexosproject.eu/dictionary/definitions.html#shortName']) = 1">errors.validation.SML.2.0.discovery.smlIdentification.shortName
			</assert>
		</rule>


		<!-- One identifier has to contain the definition "urn:ogc:def:identifier:OGC:parentSystemUniqueID". 
			The value of its contained "Term" element refers to the system that contains 
			the component. -->
		<rule context="//sml:PhysicalComponent/sml:Component/sml:identification">
			<assert
				test="count(sml:IdentifierList/sml:identifier/sml:Term[@definition = 'http://www.nexosproject.eu/dictionary/definitions.html#parentSystemUniqueID']) = 1">errors.validation.SML.2.0.discovery.smlIdentification.parentSystemUniqueID</assert>
		</rule>


		<!--~~~~~~~~~~ -->
		<!--Classification -->
		<!--~~~~~~~~~~ -->
		<!-- Each "classifier/Term" element contained in the "ClassifierList" must 
			have a "definition" attribute. This attribute links to the semantics of the 
			identifier. -->
		<rule
			context="//sml:classification/sml:ClassifierList/sml:classifier/sml:Term">
			<assert test="string-length(@definition) > 0">errors.validation.SML.2.0.discovery.smlClassification.definition</assert>
		</rule>

		<!-- A PhysicalSystem element shall contain at least one classifier with 
			the definition "http://www.nexosproject.eu/dictionary/definitions.html#sensorType. 
			The value of its contained Term element states the type of the sensor" -->
		<rule context="//sml:PhysicalSystem/sml:classification">
			<assert
				test="count(sml:ClassifierList/sml:classifier/sml:Term[@definition = 
'http://www.nexosproject.eu/dictionary/definitions.html#sensorType']) >= 1">errors.validation.SML.2.0.discovery.smlClassification.definition.sensorType</assert>
		</rule>


		<!-- A PhysicalSystem element shall contain at least one classifier with 
			the definition "http://www.nexosproject.eu/dictionary/definitions.html#intendedApplication -->
		<rule context="//sml:PhysicalSystem/sml:classification">
			<assert
				test="count(sml:ClassifierList/sml:classifier/sml:Term[@definition = 
'http://www.nexosproject.eu/dictionary/definitions.html#intendedApplication']) >= 1">errors.validation.SML.2.0.discovery.smlClassification.definition.intendedApplication</assert>
		</rule>


		<!-- A PhysicalComponent element shall contain at least one classifier 
			with the definition "http://www.nexosproject.eu/dictionary/definitions.html#sensorType" 
			The value of its contained Term element states the type of the sensor. -->
		<rule context="//sml:PhysicalComponent/sml:classification">
			<assert
				test="count(sml:ClassifierList/sml:classifier/sml:Term[@definition = 
'http://www.nexosproject.eu/dictionary/definitions.html#sensorType']) >= 1">errors.validation.SML.2.0.discovery.smlClassification.definition.sensorType</assert>
		</rule>


		<!-- A PhysicalComponent element shall contain at least one classifier 
			with the definition "http://www.nexosproject.eu/dictionary/definitions.html#intendedApplication -->
		<rule context="//sml:PhysicalComponent/sml:classification">
			<assert
				test="count(sml:ClassifierList/sml:classifier/sml:Term[@definition = 
'http://www.nexosproject.eu/dictionary/definitions.html#intendedApplication']) >= 1">errors.validation.SML.2.0.discovery.smlClassification.definition.intendedApplication</assert>
		</rule>


		<!--~~~~~~~~~~ -->
		<!--Capabilities -->
		<!--~~~~~~~~~~ -->


		<!-- To ease the usage of the capabilities element it is defined that a 
			swe:DataRecord containing a number of swe:field elements shall be used to 
			specify the capabilities of a System or Component. -->


		<!--The child element of each swe:Field element shall contain a definition 
			attribute so that a client is able to look up the semantics of the capability. -->
		<rule context="//sml:capabilities/swe:DataRecord/swe:field">
			<assert test="string-length(child::node()[@definition]) > 0">errors.validation.SML.2.0.discovery.smlCapabilities.definition</assert>
		</rule>


		<!-- If the child-element of the swe:Field is a swe:Quantity it shall contain 
			the swe:uom element which specifies the code attribute. -->
		<rule
			context="//sml:capabilities/swe:DataRecord/swe:field/swe:Quantity/swe:uom">
			<assert test="string-length(@code) > 0">errors.validation.SML.2.0.discovery.smlCapabilities.oum
			</assert>
		</rule>


		<!--The dataRecord within the capabilities section of a PhysicalSystem 
			shall contain one swe:field which specifies a swe:Envelope element with the 
			definition http://www.nexosproject.eu/dictionary/definitions.html#observedBBOX. 
			It describes the bounding box of the area that is observed by the System 
			or Component. In case of an in-situ sensor this bounding box only contains 
			the position of the sensor. -->
		<rule context="//sml:PhysicalSystem/sml:capabilities">
			<assert
				test="count(swe:DataRecord/swe:field/swe:Envelope[@definition = 
'http://www.nexosproject.eu/dictionary/definitions.html#observedBBOX']) = 1">errors.validation.SML.2.0.discovery.smlCapabilities.envelope.definition.observedBBOX</assert>
		</rule>

		<!-- The dataRecord within the capabilities section of a PhysicalComponent 
			shall contain one swe:field which specifies a swe:Envelope element with the 
			definition http://www.nexosproject.eu/dictionary/definitions.html#observedBBOX. 
			It describes the bounding box of the area that is observed by the System 
			or Component. In case of an in-situ sensor this bounding box only contains 
			the position of the sensor. -->
		<rule context="//sml:PhysicalComponent/sml:capabilities">
			<assert
				test="count(swe:DataRecord/swe:field/swe:Envelope[@definition = 
'http://www.nexosproject.eu/dictionary/definitions.html#observedBBOX']) = 1">errors.validation.SML.2.0.discovery.smlCapabilities.envelope.definition.observedBBOX</assert>
		</rule>
	</pattern>
</schema>


